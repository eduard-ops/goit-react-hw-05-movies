{"version":3,"file":"static/js/115.cd88b736.chunk.js","mappings":"mOAUe,SAASA,EAAT,GAA2B,IAAXC,EAAU,EAAVA,OAC7B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OALAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAcL,GACXM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QAChBF,KAAKH,KACP,CAACH,KAEF,8BACGE,IACC,wBACGA,EAAOO,KAAI,WAA6CC,GAAW,IAArDC,EAAoD,EAApDA,cAAeC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,UAC1C,OACE,2BACE,gBACEC,IACEF,EAlBI,mCAkB6BA,EAAeG,EAElDC,IAAKL,EACLM,UAAU,2BAEZ,cAAGA,UAAU,2BAAb,SAAyCN,KACzC,uCAAeE,OATRH","sources":["pages/Cast.js"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport { fetchCastById } from 'services/movies-api';\n\nimport iconNotFound from '../images/actor-notfound.png';\n\nimport PropTypes from 'prop-types';\n\nconst BASE_POSTER_URL = 'https://image.tmdb.org/t/p/w500/';\n\nexport default function Cast({ idFilm }) {\n  const [actors, setActors] = useState([]);\n  useEffect(() => {\n    fetchCastById(idFilm)\n      .then(rev => rev.cast)\n      .then(setActors);\n  }, [idFilm]);\n  return (\n    <>\n      {actors && (\n        <ul>\n          {actors.map(({ original_name, profile_path, character }, index) => {\n            return (\n              <li key={index}>\n                <img\n                  src={\n                    profile_path ? BASE_POSTER_URL + profile_path : iconNotFound\n                  }\n                  alt={original_name}\n                  className=\"item-cast__image-cast\"\n                />\n                <p className=\"item-cast__original-name\">{original_name}</p>\n                <p>Character: {character}</p>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </>\n  );\n}\n\nCast.propTypes = {\n  idFilm: PropTypes.string.isRequired,\n};\n"],"names":["Cast","idFilm","useState","actors","setActors","useEffect","fetchCastById","then","rev","cast","map","index","original_name","profile_path","character","src","iconNotFound","alt","className"],"sourceRoot":""}