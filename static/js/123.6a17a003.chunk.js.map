{"version":3,"file":"static/js/123.6a17a003.chunk.js","mappings":"2NAMe,SAASA,EAAT,GAA8B,IAAXC,EAAU,EAAVA,OAChC,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAOA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GACbM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,WAChBF,KAAKH,KACP,CAACH,KAGF,8BACGE,EAAQO,OAAS,GAChB,wBACGP,EAAQQ,KAAI,YAA8B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,GAC/B,OACE,2BACE,oCAAYD,MACZ,uBAAID,MAFGE,SAQf","sources":["pages/Reviews.js"],"sourcesContent":["import { useEffect, useState } from 'react';\n\nimport { fetchReviewById } from 'services/movies-api';\n\nimport PropTypes from 'prop-types';\n\nexport default function Reviews({ idFilm }) {\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    fetchReviewById(idFilm)\n      .then(rev => rev.results)\n      .then(setReviews);\n  }, [idFilm]);\n\n  return (\n    <>\n      {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(({ content, author, id }) => {\n            return (\n              <li key={id}>\n                <p>Author: {author}</p>\n                <p>{content}</p>\n              </li>\n            );\n          })}\n        </ul>\n      ) : (\n        <h2>We dont have any reviews for this movie</h2>\n      )}\n    </>\n  );\n}\n\n\nReviews.propTypes = {\n  idFilm: PropTypes.string.isRequired,\n};\n"],"names":["Reviews","idFilm","useState","reviews","setReviews","useEffect","fetchReviewById","then","rev","results","length","map","content","author","id"],"sourceRoot":""}